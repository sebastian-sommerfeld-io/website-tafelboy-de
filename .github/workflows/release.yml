---
name: Release

on:
  push:
    tags:
      - v*

jobs:
  release-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get current tag name
        id: vars
        run: echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Re-Tag image sommerfeldio/website-tafelboy-de from :release-candidate to :${{ steps.vars.outputs.tag }} and :latest
        run: |
          VERSION_TAG="$(cut -d "v" -f2 <<< ${{ steps.vars.outputs.tag }})"

          docker pull sommerfeldio/website-tafelboy-de:release-candidate

          docker tag sommerfeldio/website-tafelboy-de:release-candidate sommerfeldio/website-tafelboy-de:latest
          docker tag sommerfeldio/website-tafelboy-de:release-candidate sommerfeldio/website-tafelboy-de:$VERSION_TAG

          docker push sommerfeldio/website-tafelboy-de:latest
          docker push sommerfeldio/website-tafelboy-de:$VERSION_TAG

  docker-hub-description:
    runs-on: ubuntu-latest
    needs: release-image

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Convert README from asciidoc to markdown for DockerHub description
        run: |
          sudo apt-get install -y pandoc asciidoc
          asciidoc -b docbook README.adoc
          pandoc -f docbook -t markdown_strict README.xml -o README.md

      - name: Update DockerHub description
        uses: peter-evans/dockerhub-description@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: sommerfeldio/website-tafelboy-de
          short-description: ${{ github.event.repository.description }}
          readme-filepath: ./README.md

  on-failure:
    runs-on: ubuntu-latest
    needs: docker-hub-description
    if: failure()

    steps:
      - name: Send Pipeline Status to Google Chat
        if: always()
        uses: Co-qn/google-chat-notification@releases/v1
        with:
          name: ${{ github.workflow }}
          url: ${{ secrets.GOOGLE_CHAT_WEBHOOK }}
          status: failure
